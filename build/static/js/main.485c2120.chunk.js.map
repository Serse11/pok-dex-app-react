{"version":3,"sources":["helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","service/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemion-add.tsx","service/authentification-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatType","type","color","concat","PokemonCard","_ref","pokemon","_ref$borderColor","borderColor","_useState","useState","_useState2","_slicedToArray","setColor","history","useHistory","React","createElement","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","types","map","key","POKEMONS","hp","cp","created","Date","PokemonService","_classCallCheck","_createClass","value","_this","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","_this2","data","isEmpty","find","_this3","method","body","JSON","stringify","headers","index","findIndex","_this4","filter","_this5","term","_this6","includes","Object","keys","length","console","process","PokemonSearch","setTerm","_useState3","_useState4","setPokemons","placeholder","onChange","e","target","searchPokemon","handleInputChange","Link","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","undefined","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","_newField","fieldName","fieldValue","newField","_defineProperty","_objectSpread","addPokemon","updatePokemon","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypesValid","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","currentType","selectType","PokemonEdit","Pokemon","arguments","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","AuthentificationService","login","PrivateRoute","Component","component","rest","_objectWithoutProperties","_excluded","Route","assign","render","props","Redirect","pathname","App","Router","Switch","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.485c2120.chunk.js","sourcesContent":["const formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'brown lighten-1'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n} \n\nexport default formatType; ","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n  \ntype Props = {\n  pokemon: Pokemon,\n  borderColor?: string  \n};\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n\n    const [color, setColor] = useState<string>();\n    const history = useHistory();\n\n    const showBorder = () => {\n        setColor(borderColor);\n    };\n    \n    const hideBorder = () => {\n        setColor('#F5F5F5');\n    };\n\n    const goToPokemon = (id: number) => {\n      history.push(`/pokemons/${id}`);\n    }\n    \n  return (\n    <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card horizontal center-align\" style={{borderColor: color}}>\n        <div className=\"card-image\"> \n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            {pokemon.types.map(type => (\n                <span key={type} className={formatType(type)}>{type}</span>\n            ))}\n          </div>\n        </div>\n      </div> \n    </div>\n  );\n}\n  \nexport default PokemonCard;\n\n\n\n\n\n","import Pokemon from './pokemon';\n  \nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n\nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon|undefined> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    }); \n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../service/pokemon-service';\n \nconst PokemonSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n \n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n  \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../service/pokemon-service';\nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\n  \nconst PokemonList: FunctionComponent = () => {\n\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  \n  useEffect(() => {\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\n  }, []);\n  \n  return (\n    <div>\n      <h1 className='center'>Pokédex</h1>\n      <div className=\"container\"> \n        <div className=\"row\">\n          <PokemonSearch />\n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon}/>\n        ))}\n        </div>\n        <Link className='btn-floating btn-large waves-effect waves-light red z-depth-3' \n        style={{position: 'fixed', bottom: '25px', right: '25px'}} \n        to=\"/pokemons/add\"\n        >\n          <i className='material-icons'>add</i>\n        </Link>\n\n      </div>\n    </div> \n  );\n}\n  \nexport default PokemonList;","import React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../service/pokemon-service'; \nimport Loader from '../components/loader';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|undefined>(undefined);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n\n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                  <i className='material-icons'>edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader /></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../service/pokemon-service';\n  \ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\n  \ntype Field = {\n  value: any,\n  error?: string,\n  isValid ?: boolean\n};\n\ntype Form = {\n  picture: Field,\n  name: Field,\n  hp: Field, \n  cp: Field, \n  types: Field\n};\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n  \n  const [form, setForm] = useState<Form>({\n    picture: { value: pokemon.picture },\n    name: { value: pokemon.name, isValid: true}, \n    hp: { value: pokemon.hp, isValid: true},\n    cp: { value: pokemon.cp, isValid: true},\n    types: { value: pokemon.types, isValid: true},\n  })\n\n  const history = useHistory();\n  \n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ]\n\n  const hasType = (type: string): boolean => {\n    return form.types.value.includes(type);\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = {\n      [fieldName]: { value: fieldValue },\n      value: undefined\n    };\n    setForm({...form, ...newField});\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if(checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n\n    setForm({...form, ...{ types: newField }});\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n\n      isEditForm ? updatePokemon() : addPokemon();\n    }\n  }\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push('/pokemons'));\n  }\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n   \n  const isAddForm = () => {\n    return !isEditForm;\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // validate picture url\n    if(isAddForm()) {\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = \"L'url n'est pas valide\";\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = { ...form, ...{picture: newField} };\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = { ...form, ...{ picture: newField } };\n      }\n    }\n\n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,3}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 250';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  };\n\n  const isTypesValid = (type: string): boolean => {\n\n    if(form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n\n    if(form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n            {isEditForm && (\n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <span className='btn-floating halfway-fab waves-effect waves-light'>\n                  <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n                </span>\n              </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                {isAddForm() && ( \n                  <div className=\"form-group\">\n                  <label htmlFor=\"name\">Image</label>\n                  <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                  {form.picture.error && \n                    <div className='card-panel red accent-1'>\n                      {form.picture.error}\n                    </div>\n                  }  \n                </div>\n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {form.name.error && \n                    <div className='card-panel red accent-1'>\n                      {form.name.error}\n                    </div>\n                  }  \n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error && \n                    <div className='card-panel red accent-1'>\n                      {form.hp.error}\n                    </div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error && \n                    <div className='card-panel red accent-1'>\n                      {form.cp.error}\n                    </div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Loader from '../components/loader';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../service/pokemon-service';\n \ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|undefined>(undefined);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader /></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","export default class Pokemon {\n    id: number;\n    hp: number;\n    cp: number;\n    name: string;\n    picture: string;\n    types: Array<string>;\n    created: Date;\n    \n    constructor(\n     id: number,\n     hp: number = 100,\n     cp: number = 10,\n     name: string = '...',\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\n     types: Array<string> = ['Normal'],\n     created: Date = new Date()\n    ) {\n     this.id = id;\n     this.hp = hp;\n     this.cp = cp;\n     this.name = name;\n     this.picture = picture;\n     this.types = types;\n     this.created = created;\n    }\n   }","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n \nconst PokemonAdd: FunctionComponent = () => {\n\n  const [id] = useState<number>(new Date().getTime());\n  const [pokemon] = useState<Pokemon>(new Pokemon(id));\n   \n  return (\n    <div className=\"row\">\n      <h2 className=\"header center\">Ajouter un pokémon</h2>\n      <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n    </div>\n  );\n}\n \nexport default PokemonAdd;","export default class AuthenticationService {\n\n    static isAuthenticated:boolean = false;\n  \n    static login(username: string, password: string): Promise<boolean> {\n      const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\n  \n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.isAuthenticated = isAuthenticated;\n          resolve(isAuthenticated);\n        }, 1000);\n      });\n    }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthentificationService from '../service/authentification-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthentificationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './service/authentification-service';\n  \nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {    \n      return <Redirect to={{ pathname: '/login' }} />\n    }\n  \n    return <Component {...props} />\n  }} />\n);\n  \nexport default PrivateRoute;","import React, { FunctionComponent,} from 'react'; \nimport PokemonList from './pages/pokemon-list';\nimport PokemonsDetail from './pages/pokemon-detail';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonAdd from './pages/pokemion-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\n\nconst App: FunctionComponent = () => { \n \n    return (\n        <Router>\n            <div>\n                {/* navbar */}\n                <nav>\n                    <div className='nav-wapper teal'>\n                        <Link to=\"/\" className='brand-logo center'>Pokédex</Link>\n                    </div>\n                </nav>\n                {/*systeme des routes de l'application */}\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={PokemonList} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\n                    <PrivateRoute exact path= \"/pokemons/add\" component={PokemonAdd} />\n                    <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\n                    <PrivateRoute path=\"/pokemons/:id\" component={PokemonsDetail} />\n                    <Route component={PageNotFound} />\n                </Switch>\n            </div>\n        </Router>\n    );                             \n}    \n  \nexport default App; \n\n\n\n\n\n//importation module react\n//typage du composant app en react.fc; fc = function component \n    \n//pas de hooks dans une boucle ou d'une condition, toujours utilisés les hooks a la racine\n// toujours appeler les hooks depuis un composant de function \n//useState recois une methode pour deuxieme argument qui permet de modif l'etat du composant \n\n  \n//exportation du composant pour le rendre utilisable dans le reste de l'appli ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />, //\n    document.getElementById('root') //élément html avec id root \n);"],"sourceRoot":""}